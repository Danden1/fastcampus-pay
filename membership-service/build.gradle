buildscript {
    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:0.5.1.RELEASE"
    }
}
plugins {
    id 'org.springframework.boot' version '2.5.2'
    id 'java'
    id 'com.palantir.docker' version '0.25.0'
}

compileJava {
    sourceCompatibility = 11
    targetCompatibility = 11
}

apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group 'com.fastcampuspay.membership'
version '1.0.3'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation group: 'javax.persistence', name: 'javax.persistence-api', version: '2.2'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.jetbrains:annotations:23.0.0'
    implementation project(path: ':common')

    testImplementation 'junit:junit:4.13.1'
    runtimeOnly 'mysql:mysql-connector-java'
}

test {
    useJUnitPlatform()
}

docker {
    println(tasks.bootJar.outputs.files)
    //image name
    name rootProject.name + '-' + project.name + ':' + version
    //어떤 docker 파일
    dockerfile file('../Dockerfile')
    //어떤 파일들을 Dockerfile에 복사할 것인가
    files tasks.bootJar.outputs.files
    //Dockerfile에 전달할 인자.
    buildArgs(['JAR_FILE': tasks.bootJar.outputs.files.singleFile.name])
}